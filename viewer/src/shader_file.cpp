const char color_vertex_shader[] =
"#version 450 core\n"
"\n"
"const vec4 points[4] = vec4[4](vec4(-1.0, -1.0, 0.0, 1.0),\n"
"								vec4(-1.0, 1.0, 0.0, 1.0),\n"
"								vec4(1.0, 1.0, 0.0, 1.0),\n"
"								vec4(1.0, -1.0, 0.0, 1.0));\n"
"\n"
"const vec2 vc[4] = vec2[4](vec2(0.0, 1.0),\n"
"							vec2(0.0, 0.0),\n"
"							vec2(1.0, 0.0),\n"
"							vec2(1.0, 1.0));\n"
"\n"
"out vec2 texture_coords;\n"
"\n"
"void main()\n"
"{\n"
"	texture_coords = vc[gl_VertexID];\n"
"	gl_Position = points[gl_VertexID];\n"
"}\n";

const char color_fragment_shader[] =
"#version 450 core\n"
"\n"
"layout(location = 0) uniform sampler2D sampler;\n"
"in vec2 texture_coords;\n"
"out vec4 frag_c;\n"
"\n"
"void main()\n"
"{\n"
"	vec4 frag_c_bgra = texture(sampler, texture_coords);\n"
"	frag_c = frag_c_bgra.bgra;\n"
"}\n";

const char depth_vertex_shader[] =
"#version 450 core\n"
"\n"
"const vec4 points[4] = vec4[4](vec4(-1.0, -1.0, 0.0, 1.0),\n"
"								vec4(-1.0, 1.0, 0.0, 1.0),\n"
"								vec4(1.0, 1.0, 0.0, 1.0),\n"
"								vec4(1.0, -1.0, 0.0, 1.0));\n"
"\n"
"const vec2 vc[4] = vec2[4](vec2(0.0, 1.0),\n"
"							vec2(0.0, 0.0),\n"
"							vec2(1.0, 0.0),\n"
"							vec2(1.0, 1.0));\n"
"\n"
"out vec2 texture_coords;\n"
"\n"
"void main()\n"
"{\n"
"	texture_coords = vc[gl_VertexID];\n"
"	gl_Position = points[gl_VertexID];\n"
"}\n";

const char depth_fragment_shader[] =
"#version 450 core\n"
"\n"
"layout(location = 0) uniform sampler2D sampler;\n"
"in vec2 texture_coords;\n"
"out vec4 frag_c;\n"
"\n"
"void main()\n"
"{\n"
"	float f = texture(sampler, texture_coords).x;\n"
"	float g = fract((1.0-f)*65535/255);\n"
"	frag_c = vec4(g, g, g, 1.0);\n"
"}\n";